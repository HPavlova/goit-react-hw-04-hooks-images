{"version":3,"sources":["components/button/Button.module.css","services/imageApi.jsx","components/Searchbar.jsx","components/ImageGalleryItem.jsx","components/Load.jsx","components/ImageGallery.jsx","components/button/Button.jsx","components/Modal.jsx","App.js","index.js"],"names":["module","exports","fetchImage","query","page","fetch","then","response","ok","json","Promise","reject","Error","images","hits","Searchbar","onSubmit","useState","setQuery","className","e","preventDefault","trim","toast","error","type","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","toLowerCase","ImageGalleryItem","tags","webformatURL","largeImageURL","setModalImg","src","alt","onClick","Load","color","height","width","timeout","ImageGallery","status","map","id","Button","onLoadMore","styles","button","modalRoot","document","querySelector","Modal","props","useEffect","handleKeyDown","code","onClose","window","addEventListener","removeEventListener","createPortal","target","children","App","setImages","setPage","setTags","setLargeImageURL","setError","showModal","setShowModal","setStatus","fetchImages","imageApi","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","toggleModal","largeImageUR","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.48673afc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2cZ5P\"};","const API_KEY = '22966044-c718c1bbe050e09f7279dea2f';\nconst perPage = 12;\nconst BASE_URL = 'https://pixabay.com/api';\n\nfunction fetchImage(query, page) {\n  return fetch(\n    `${BASE_URL}/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${perPage}`,\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`Нет изображения с названием ${query}`));\n    })\n    .then(images => images.hits);\n}\n\nexport default fetchImage;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { toast } from 'react-toastify';\n\nexport default function Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleNameChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      toast.error('Введите название изображения');\n      return;\n    }\n\n    onSubmit(query);\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          name=\"query\"\n          value={query}\n          onChange={handleNameChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst ImageGalleryItem = ({\n  tags,\n  webformatURL,\n  largeImageURL,\n  setModalImg,\n}) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt={tags}\n        className=\"ImageGalleryItem-image\"\n        onClick={() => setModalImg({ largeImageURL, tags })}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  setModalImg: propTypes.func.isRequired,\n  tags: propTypes.string.isRequired,\n  webformatURL: propTypes.string.isRequired,\n  largeImageURL: propTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Load = () => {\n  return (\n    <Loader\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  );\n};\n\nexport default Load;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { toast } from 'react-toastify';\n\nimport ImageGalleryItem from './ImageGalleryItem';\nimport Load from './Load';\n\nexport default function ImageGallery({ images, status, setModalImg }) {\n  if (status === 'idle') {\n    return null;\n  }\n\n  if (status === 'pending') {\n    return <Load />;\n  }\n\n  if (status === 'rejected') {\n    return toast.error('Упс! Что-то пошло не так');\n  }\n\n  if (status === 'resolved') {\n    return (\n      <ul className=\"ImageGallery\">\n        {images.map(({ webformatURL, largeImageURL, tags, id }) => (\n          <ImageGalleryItem\n            key={id}\n            tags={tags}\n            webformatURL={webformatURL}\n            largeImageURL={largeImageURL}\n            setModalImg={setModalImg}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  status: PropTypes.string.isRequired,\n  setModalImg: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../button/Button.module.css';\n\nconst Button = ({ onLoadMore }) => {\n  return (\n    <button type=\"button\" onClick={onLoadMore} className={styles.button}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal(props) {\n  // console.log(props);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    function handleKeyDown(e) {\n      if (e.code === 'Escape') {\n        props.onClose();\n      }\n    }\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [props]);\n\n  function handleOverlayClick(e) {\n    if (e.currentTarget === e.target) {\n      props.onClose();\n    }\n  }\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleOverlayClick}>\n      <div className=\"Modal\">{props.children}</div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n","import { useState, useEffect } from 'react';\nimport './App.css';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport imageApi from './services/imageApi';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/button/Button';\nimport Modal from './components/Modal';\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [tags, setTags] = useState(null);\n  const [webformatURL] = useState(null);\n  const [largeImageURL, setLargeImageURL] = useState(null);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    setStatus('pending');\n    setImages([]);\n    setPage(1);\n    fetchImages();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  function fetchImages() {\n    imageApi(query, page)\n      .then(images => {\n        setImages(prevState => [...prevState, ...images]);\n        setPage(prevState => prevState + 1);\n        if (page > 1) {\n          handleScroll();\n        }\n        setStatus('resolved');\n      })\n      .catch(error => setStatus('rejected'), setError(error))\n      .finally(() => setStatus('resolved'));\n  }\n\n  function toggleModal() {\n    setShowModal(prevState => !prevState);\n  }\n\n  function setModalImg({ largeImageURL, tags }) {\n    setLargeImageURL(largeImageURL);\n    setTags(tags);\n    toggleModal();\n  }\n\n  function handleScroll() {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  function onSubmit(query) {\n    setQuery(query);\n    setImages([]);\n    setPage(1);\n  }\n\n  return (\n    <>\n      <Searchbar onSubmit={onSubmit} />\n      <ImageGallery\n        images={images}\n        tags={tags}\n        webformatURL={webformatURL}\n        largeImageUR={largeImageURL}\n        status={status}\n        setModalImg={setModalImg}\n      />\n      {images.length > 0 && <Button onLoadMore={fetchImages} />}\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <img src={largeImageURL} alt={tags} />\n        </Modal>\n      )}\n      <ToastContainer />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}